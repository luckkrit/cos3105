import{o,c as r,k as a,e,q as c,s as i,B as l}from"./modules/vue-qryzO8Wt.js";import{I as p}from"./slidev/default-C8F_Hdub.js";import{u,f as d}from"./slidev/context-OXKqTPeA.js";import"./index-DEIgdP3N.js";import"./modules/shiki-gHWd0iSs.js";const m="/cos3105/slides/chapter5/images/chapter5/nonpre.png",w={__name:"chapter5.md__slidev_7",setup(f){const{$slidev:_,$nav:g,$clicksContext:t,$clicks:v,$page:x,$renderContext:h,$frontmatter:n}=u();return t.setup(),($,s)=>(o(),r(p,c(i(l(d)(l(n),6))),{default:a(()=>s[0]||(s[0]=[e("h1",null,"CPU Scheduling",-1),e("div",{class:"flex gap-3"},[e("div",{class:"w-1/2"},[e("ul",null,[e("li",null,"ชนิดของ CPU Scheduling")]),e("ol",null,[e("li",null,[e("p",null,"Non-Preemptive Scheduling: ถูกใช้เมื่อกระบวนการยุติ หรือเมื่อกระบวนการเปลี่ยนจากสถานะกำลังทำงานเป็นสถานะรอ"),e("pre",null,[e("code",null,`- ซึ่งอ้างอิงจากการจัดตารางเวลาประมวลผล (จากสไลด์หน้าที่แล้ว) ดังนั้นระบบปฏิบัติการจะจัดตารางการประมวลผลได้ก็คือ กรณี 1 (รอรับส่งข้อมูล) และกรณี 4 (หยุดทำงาน)

- นั่นคือระบบปฏิบัติการในอดีตจะจัดตารางเวลาประมวลผลได้ก็ต่อเมื่อโปรเซสคืนหน่วยประมวลผลกลับให้ระบบปฏิบัติการเท่านั้น เนื่องจากระบบปฏิบัติการไม่อาจจะแทรกแซงการทำงานของโปรเซสได้จึงเรียกว่าเป็นการจัดตารางเวลาแบบแทรกแซงไม่ได้ (non-preemptive scheduling)
`)])])])]),e("div",{class:"flex flex-col"},[e("div",{class:"w-[404px]"}," หรือการจัดตารางเวลาแบบร่วมมือกัน (cooperative scheduling) เพราะต้องอาศัยความร่วมมือระหว่างโปรเซส กับระบบปฏิบัติการ "),e("img",{src:m,class:"mt-3"})])],-1)])),_:1},16))}};export{w as default};
